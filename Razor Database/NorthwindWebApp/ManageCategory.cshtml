<!DOCTYPE html>
<html>
<head>
    <title></title>
    <style rel="stylesheet" media="all">
        body {
            display: grid;
        }

<<<<<<< HEAD
        @{
            string catId = Request["catId"] ?? string.Empty;
            string catName = Request["catName"] ?? string.Empty;
            string catDescription = Request["catDescription"] ?? string.Empty;
            string submitType = Request["submitType"] ?? string.Empty;
            HttpPostedFileBase catPic = null; // Usee this for insert/update
            string mimeType = null; // Use this for insert/update as well as display
            byte[] catPicBytes = null; // Use for insert/update as well as display
=======
        form {
            display: grid;
            min-width: 200px;
            max-width: 300px;
        }
>>>>>>> d27d40a0e88971650681917088e09ecb373b1baa

        fieldset.buttons {
            border: 0;
        }
    </style>
</head>
<body>
    <h1>Manage Category</h1>
    @{
        string catId = Request["catId"] ?? string.Empty;
        string catName = Request["catName"] ?? string.Empty;
        string catDescription = Request["catDescription"] ?? string.Empty;
        string submitType = Request["submitType"] ?? string.Empty;
        HttpPostedFileBase catPic = null; // Use this for insert/update
        string mimeType = null; // Use this for insert/update as well as display
        byte[] catPicBytes = null; // Use for insert/update as well as display


        var northwindDb = WebMatrix.Data.Database.Open("NorthwindDb");
        //var results = northwindDb.Query("SELECT CategoryID, CategoryName, Description, Picture, PictureMimeType FROM Categories");
        // See if this is a Post request (i.e. - they submitted the form)
        if (IsPost)
        {
            // See if an image was included in the Posted form data
            if (Request.Files.Count > 0)
            {
<<<<<<< HEAD
                // See if an image was included in the posted form data
                if (Request.Files.Count > 0)
                {
                    catPic = Request.Files[0];
                    mimeType = catPic.ContentType;
                    catPicBytes = new byte[catPic.ContentLength];
                    catPic.InputStream.Read(catPicBytes, 0, catPic.ContentLength);
                }
                switch (submitType)
                {
                    case "Add":
                        string insertStatement = "INSERT INTO Categories(CategoryName, Description, Picture, PictureMimeType) VALUES(@0, @1. @2, @3)";
                        northwindDb.Execute(insertStatement, catName, catDescription, catPicBytes, mimeType);
                        var newId = northwindDb.QueryValue("SELECT SCOPE_IDENTITY()");
                        catId = newId.ToString();
                        break;
                    case "Update":
                        string updateStatement;
                        int rowsAffected;
                        if (catPicBytes != null)
                        {
                            updateStatement = "UPDATE Categories SET CategoryName = @0, Description = @1, Picture = @2, PictureMimeType = @3 WHERE CategoryID = @4";
                            rowsAffected = northwindDb.Execute(updateStatement, catName, catDescription, catPicBytes, mimeType, catId);
                        }
                        else
                        {
                            updateStatement = "UPDATE Categories SET CategoryName = @0, Description = @1 WHERE CategoryID = @2";
                            rowsAffected = northwindDb.Execute(updateStatement, catName, catDescription, catPicBytes, mimeType, catId);
                        }
                        if (rowsAffected == 0)
                        {
                            <div>Update failed. Try again or cancel.</div>
                        }
                        else
                        {
                            <div>Update successful</div>
                        }
                        break;
                    case "Delete":
                        string deleteStatement = "DELETE FROM Categories WHERE CategoryID = @0";
                        int rowsDeleted = northwindDb.Execute(deleteStatement, catId);
                        if (rowsDeleted == 0)
                        {
                            <div>Delete failed. Try again or cancel.</div>
                        }
                        else
                        {
                            <div>Delete successful</div>
                        }
                        break;
                    case "Cancel":
                        Response.Redirect("~", true);
                        break;
                    default:
                        <div>WTF == "What's That For"</div>
                        break;
                }
            }
            else // This is a GET request
            {
                int categoryId;
                if (int.TryParse(catId, out categoryId))
                {
                    // READ the data to display
                    // @0 is the first placeholder position
                    string query = "SELECT CategoryID, CategoryName, Description, Picture, PictureMimeType FROM Categories WHERE CategoryID = @0";
            var result = northwindDb.QuerySingle(query, categoryId);
                    if (result == null)
                    {
                        <div>No such category found for ID @catId.</div>
                    }
                    else
                    {
                        catName = result.CategoryName;
                        catDescription = result.Description;
                        catPicBytes = result.Picture;
                        mimeType = result.PictureMimeType;
                    }

                }
            }
            }

        <!-- When your form will have an <input type="file" />. then you will need to have the enctype attribute on your <form> element. enctype means "Encoding Type"
        - enctype="multipart/form-data"
        No characters are encoded. The value is required when you are using forms that have a file upload control. -->
        <form method="post" enctype="multipart/form-data">
            <label>Name</label>
            <input name="catName" type="text" value="@catName"/>
            <br/>
            <label>Description</label>
            <input name="catDescription" type="text" value="@catDescription" />
            <br />
            <label>Picture</label>
            <input name="catPic" type="file" value="" />
            @if (catPicBytes != null)
                {
                    string base64String = Convert.ToBase64String(catPicBytes);
                    string imageSrc = string.Format("data:{0};base64,{1}", mimeType, base64String);
                    <text>
                        <img src="@imageSrc" width="75" />
                    </text>
                }
            <br />
            <fieldset class="buttons">
                @if (string.IsNullOrWhiteSpace(catId))
                {
                    <input name="submitType" type="submit" value="Add" />
                }
                else
                {
                    <input name="submitType" type="submit" value="Delete" />
                    <input name="submitType" type="submit" value="Cancel" />
                }
                
                <input name="catId" type="hidden" value="@catId" />
            </fieldset>
        </form>
    </body>
</html>
=======
                catPic = Request.Files[0];
                mimeType = catPic.ContentType;
                catPicBytes = new byte[catPic.ContentLength];
                catPic.InputStream.Read(catPicBytes, 0, catPic.ContentLength);
            }
            switch (submitType)
            {
                case "Add":
                    string insertStatement = "INSERT INTO Categories(CategoryName, Description, Picture, PictureMimeType) VALUES(@0, @1, @2, @3)";
                    northwindDb.Execute(insertStatement, catName, catDescription, catPicBytes, mimeType);
                    var newId = northwindDb.QueryValue("SELECT SCOPE_IDENTITY()");
                    catId = newId.ToString();
                    break;
                case "Update":
                    string updateStatement;
                    int rowsAffected;
                    if (catPicBytes != null)
                    {
                        updateStatement = "UPDATE Categories SET CategoryName = @0, Description = @1, Picture = @2, PictureMimeType = @3 WHERE CategoryID = @4";
                        rowsAffected = northwindDb.Execute(updateStatement, catName, catDescription, catPicBytes, mimeType, catId);
                    }
                    else
                    {
                        updateStatement = "UPDATE Categories SET CategoryName = @0, Description = @1 WHERE CategoryID = @2";
                        rowsAffected = northwindDb.Execute(updateStatement, catName, catDescription, catId);
                    }
                    if (rowsAffected == 0)
                    {
                        <div>Update failed. Try again or cancel.</div>
                    }
                    else
                    {
                        <div>Update successful.</div>
                    }
                    break;
                case "Delete":
                    <div>I can't do that right now</div>
                    break;
                case "Cancel":
                    Response.Redirect("~", true);
                    break;
                default:
                    <div>WTF == "What's That For?!"</div>
                    break;
            }
        }
        else // this is a GET request
        {
            int categoryId;
            if (int.TryParse(catId, out categoryId))
            {
                // READ the data to display
                // @0 is the first placeholder position
                string query = "SELECT CategoryID, CategoryName, Description, Picture, PictureMimeType FROM Categories WHERE CategoryID = @0";
                var result = northwindDb.QuerySingle(query, categoryId);
                if (result == null)
                {
                    <div>No such category found for ID @categoryId.</div>
                }
                else
                {
                    catName = result.CategoryName;
                    catDescription = result.Description;
                    catPicBytes = result.Picture;
                    mimeType = result.PictureMimeType;
                }
            }
        }
    }
    <!-- When your form will have an <input type="file" />,
         then you will need to have the enctype attribute
         on your <form> element. enctype means "Encoding Type"
         - enctype="multipart/form-data"
           No characters are encoded. This value is required when
           you are using forms that have a file upload control.-->
    <form method="post" enctype="multipart/form-data">
        <label>Name</label>
        <input name="catName" type="text" value="@catName" />
        <br />
        <label>Description</label>
        <input name="catDescription" type="text" value="@catDescription" />
        <br />
        <label>Picture</label>
        <input name="catPic" type="file" value="" />
        @if (catPicBytes != null)
            {
                string base64String = Convert.ToBase64String(catPicBytes);
                string imageSrc = string.Format("data:{0};base64,{1}", mimeType, base64String);
            <text>
                <img src="@imageSrc" width="75" />
            </text>
        }
        <br />
        <fieldset class="buttons">
            @if (string.IsNullOrWhiteSpace(catId))
            {
                <input name="submitType" type="submit" value="Add" />
            }
            else
            {
                <input name="submitType" type="submit" value="Update" />
                <input name="submitType" type="submit" value="Delete" />
            }
            <input name="submitType" type="submit" value="Cancel" />
            <input name="catId" type="hidden" value="@catId" />
        </fieldset>
    </form>
</body>
</html>
>>>>>>> d27d40a0e88971650681917088e09ecb373b1baa
